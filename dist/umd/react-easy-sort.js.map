{"version":3,"file":"react-easy-sort.js","sources":["../../src/helpers.ts","../../src/hooks.ts","../../src/index.tsx"],"sourcesContent":["import { Point } from './types'\n\n/**\n * This function check if a given point is inside of the items rect.\n * If it's not inside any rect, it will return the index of the closest rect\n */\nexport const findItemIndexAtPosition = (\n  { x, y }: Point,\n  itemsRect: DOMRect[],\n  { fallbackToClosest = false } = {}\n): number => {\n  let smallestDistance = 10000\n  let smallestDistanceIndex = -1\n  for (let index = 0; index < itemsRect.length; index += 1) {\n    const rect = itemsRect[index]\n    // if it's inside the rect, we return the current index directly\n    if (x >= rect.left && x < rect.right && y >= rect.top && y < rect.bottom) {\n      return index\n    }\n    if (fallbackToClosest) {\n      // otherwise we compute the distance and update the smallest distance index if needed\n      const itemCenterX = (rect.left + rect.right) / 2\n      const itemCenterY = (rect.top + rect.bottom) / 2\n\n      const distance = Math.sqrt(Math.pow(x - itemCenterX, 2) + Math.pow(y - itemCenterY, 2)) // ** 2 operator is not supported on IE11\n      if (distance < smallestDistance) {\n        smallestDistance = distance\n        smallestDistanceIndex = index\n      }\n    }\n  }\n  return smallestDistanceIndex\n}\n","import React from 'react'\n\nimport { Point, PseudoMouseEvent } from './types'\n\n\nconst getMousePoint = (e: PseudoMouseEvent): Point => ({\n  x: Number(e.clientX),\n  y: Number(e.clientY),\n})\n\nconst getTouchPoint = (touch: Touch | React.Touch): Point => ({\n  x: Number(touch.clientX),\n  y: Number(touch.clientY),\n})\n\nconst getPointInContainer = (point: Point, containerTopLeft: Point): Point => {\n  return {\n    x: point.x - containerTopLeft.x,\n    y: point.y - containerTopLeft.y,\n  }\n}\n\nconst preventDefault = (event: Event) => {\n  event.preventDefault()\n}\n\nconst disableContextMenu = () => {\n  window.addEventListener('contextmenu', preventDefault, { capture: true, passive: false })\n}\n\nconst enableContextMenu = () => {\n  window.removeEventListener('contextmenu', preventDefault)\n}\n\nexport type OnStartArgs = { point: Point; pointInWindow: Point }\nexport type OnMoveArgs = { point: Point; pointInWindow: Point }\n\ntype UseDragProps = {\n  onStart?: (args: OnStartArgs) => void\n  onMove?: (args: OnMoveArgs) => void\n  onEnd?: () => void\n  allowDrag?: boolean\n  containerRef: React.MutableRefObject<HTMLElement | null>\n  knobs?: HTMLElement[]\n}\n\nexport const useDrag = ({\n  onStart,\n  onMove,\n  onEnd,\n  allowDrag = true,\n  containerRef,\n  knobs,\n}: UseDragProps) => {\n  // contains the top-left coordinates of the container in the window. Set on drag start and used in drag move\n  const containerPositionRef = React.useRef<Point>({ x: 0, y: 0 })\n  // on touch devices, we only start the drag gesture after pressing the item 200ms.\n  // this ref contains the timer id to be able to cancel it\n  const handleTouchStartTimerRef = React.useRef<number | undefined>(undefined)\n  // on non-touch device, we don't call onStart on mouse down but on the first mouse move\n  // we do this to let the user clicks on clickable element inside the container\n  // this means that the drag gesture actually starts on the fist move\n  const handleClickStartTimerMoveRef = React.useRef<number | null>(null)\n  // see https://twitter.com/ValentinHervieu/status/1324407814970920968\n  // we do this so that the parent doesn't have to use `useCallback()` for these callbacks\n  const callbacksRef = React.useRef({ onStart, onMove, onEnd })\n\n  // instead of relying on hacks to know if the device is a touch device or not,\n  // we track this using an onTouchStart listener on the document. (see https://codeburst.io/the-only-way-to-detect-touch-with-javascript-7791a3346685)\n  const [isTouchDevice, setTouchDevice] = React.useState(false)\n\n  React.useEffect(() => {\n    callbacksRef.current = { onStart, onMove, onEnd }\n  }, [onStart, onMove, onEnd])\n\n  const cancelTouchStart = () => {\n    if (handleTouchStartTimerRef.current) {\n      window.clearTimeout(handleTouchStartTimerRef.current)\n    }\n  }\n\n  const saveContainerPosition = React.useCallback(() => {\n    if (containerRef.current) {\n      const bounds = containerRef.current.getBoundingClientRect()\n      containerPositionRef.current = { x: bounds.left, y: bounds.top }\n    }\n  }, [containerRef])\n\n  const onDrag = React.useCallback((pointInWindow: Point) => {\n    const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n    if (callbacksRef.current.onMove) {\n      callbacksRef.current.onMove({ pointInWindow, point })\n    }\n  }, [])\n\n  const onMouseMove = React.useCallback(\n    (e: MouseEvent) => {\n      onDrag(getMousePoint(e))\n      // otherwise, we do the normal move logic\n    },\n    [onDrag]\n  )\n\n  const moveStart = React.useCallback(\n      (e: PseudoMouseEvent) => {\n          const pointInWindow = getMousePoint(e)\n          const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n          // if (Math.sqrt( Math.pow((oldPoint.x - point.x), 2) + Math.pow((oldPoint.y - point.y), 2)) > 50) {\n          //   return;\n          // }\n          if (callbacksRef.current.onStart) {\n            callbacksRef.current.onStart({ point, pointInWindow })\n          }\n      },\n      []\n  )\n\n  const onTouchMove = React.useCallback(\n    (e: TouchEvent) => {\n      if (e.cancelable) {\n        // Prevent the whole page from scrolling\n        e.preventDefault()\n        onDrag(getTouchPoint(e.touches[0]))\n      } else {\n        // if the event is not cancelable, it means the browser is currently scrolling\n        // which cannot be interrupted. Thus we cancel the drag gesture.\n        document.removeEventListener('touchmove', onTouchMove)\n        if (callbacksRef.current.onEnd) {\n          callbacksRef.current.onEnd()\n        }\n      }\n    },\n    [onDrag]\n  )\n\n  const onMouseUp = React.useCallback(() => {\n    if (handleClickStartTimerMoveRef.current) {\n      clearTimeout(handleClickStartTimerMoveRef.current)\n    }\n    document.removeEventListener('mousemove', onMouseMove)\n    document.removeEventListener('mouseup', onMouseUp)\n    if (callbacksRef.current.onEnd) {\n      callbacksRef.current.onEnd()\n    }\n  }, [onMouseMove])\n\n  const onTouchEnd = React.useCallback(() => {\n    document.removeEventListener('touchmove', onTouchMove)\n    document.removeEventListener('touchend', onTouchEnd)\n    enableContextMenu()\n    if (callbacksRef.current.onEnd) {\n      callbacksRef.current.onEnd()\n    }\n  }, [onTouchMove])\n\n  const onMouseDown = React.useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      if (e.button !== 0) {\n        // we don't want to handle clicks other than left ones\n        return\n      }\n\n      if (knobs?.length && !knobs.find((knob) => knob.contains(e.target as Node))) {\n        return\n      }\n\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener('mouseup', onMouseUp)\n\n      saveContainerPosition()\n\n      const x = e.clientX;\n      const y = e.clientY;\n      // mark the next move as being the first one\n      handleClickStartTimerMoveRef.current = window.setTimeout(\n          () => {\n            moveStart({\n              clientX: x,\n              clientY: y,\n            })\n          },\n          300\n      )\n    },\n    [onMouseMove, onMouseUp, saveContainerPosition, knobs]\n  )\n\n  const handleTouchStart = React.useCallback(\n    (point: Point, pointInWindow: Point) => {\n      document.addEventListener('touchmove', onTouchMove, { capture: false, passive: false })\n      document.addEventListener('touchend', onTouchEnd)\n      disableContextMenu()\n\n      if (callbacksRef.current.onStart) {\n        callbacksRef.current.onStart({ point, pointInWindow })\n      }\n    },\n    [onTouchEnd, onTouchMove]\n  )\n\n  const onTouchStart = React.useCallback(\n    (e: TouchEvent) => {\n      if (knobs?.length && !knobs.find((knob) => knob.contains(e.target as Node))) {\n        return\n      }\n\n      saveContainerPosition()\n\n      const pointInWindow = getTouchPoint(e.touches[0])\n      const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n\n      // we wait 120ms to start the gesture to be sure that the user\n      // is not trying to scroll the page\n      handleTouchStartTimerRef.current = window.setTimeout(\n        () => handleTouchStart(point, pointInWindow),\n        300\n      )\n    },\n    [handleTouchStart, saveContainerPosition, knobs]\n  )\n\n  const detectTouchDevice = React.useCallback(() => {\n    setTouchDevice(true)\n    document.removeEventListener('touchstart', detectTouchDevice)\n  }, [])\n\n  // if the user is scrolling on mobile, we cancel the drag gesture\n  const touchScrollListener = React.useCallback(() => {\n    cancelTouchStart()\n  }, [])\n\n  React.useLayoutEffect(() => {\n    if (isTouchDevice) {\n      const container = containerRef.current\n\n      if (allowDrag) {\n        container?.addEventListener('touchstart', onTouchStart, { capture: true, passive: false })\n        // we are adding this touchmove listener to cancel drag if user is scrolling\n        // however, it's also important to have a touchmove listener always set\n        // with non-capture and non-passive option to prevent an issue on Safari\n        // with e.preventDefault (https://github.com/atlassian/react-beautiful-dnd/issues/1374)\n        document.addEventListener('touchmove', touchScrollListener, {\n          capture: false,\n          passive: false,\n        })\n        document.addEventListener('touchend', touchScrollListener, {\n          capture: false,\n          passive: false,\n        })\n      }\n\n      return () => {\n        container?.removeEventListener('touchstart', onTouchStart, { capture: true })\n        document.removeEventListener('touchmove', touchScrollListener, { capture: false })\n        document.removeEventListener('touchend', touchScrollListener, { capture: false })\n        document.removeEventListener('touchmove', onTouchMove)\n        document.removeEventListener('touchend', onTouchEnd)\n        enableContextMenu()\n        cancelTouchStart()\n      }\n    }\n    // if non-touch device\n    document.addEventListener('touchstart', detectTouchDevice)\n    return () => {\n      document.removeEventListener('touchstart', detectTouchDevice)\n      document.removeEventListener('mousemove', onMouseMove)\n      document.removeEventListener('mouseup', onMouseUp)\n    }\n  }, [\n    isTouchDevice,\n    allowDrag,\n    detectTouchDevice,\n    onMouseMove,\n    onTouchMove,\n    touchScrollListener,\n    onTouchEnd,\n    onMouseUp,\n    containerRef,\n    onTouchStart,\n  ])\n\n  // on touch devices, we cannot attach the onTouchStart directly via React:\n  // Touch handlers must be added with {passive: false} to be cancelable.\n  // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n  return isTouchDevice ? {} : { onMouseDown }\n}\n","import arrayMove from 'array-move'\nimport React, { HTMLAttributes } from 'react'\n\nimport { findItemIndexAtPosition } from './helpers'\nimport { useDrag } from './hooks'\nimport { Point } from './types'\n\nconst DEFAULT_CONTAINER_TAG = 'div'\n\ntype Props<TTag extends keyof JSX.IntrinsicElements> = HTMLAttributes<TTag> & {\n  children: React.ReactNode\n  /** Determines whether drag functionality is enabled, defaults to true */\n  allowDrag?: boolean\n  /** Called when the user finishes a sorting gesture. */\n  onSortEnd: (oldIndex: number, newIndex: number) => void\n  /** Class applied to the item being dragged */\n  draggedItemClassName?: string\n  /** Determines which type of html tag will be used for a container element */\n  as?: TTag\n  /** Determines if an axis should be locked */\n  lockAxis?: 'x' | 'y'\n  /** Reference to the Custom Holder element */\n  customHolderRef?: React.RefObject<HTMLElement | null>\n}\n\n// this context is only used so that SortableItems can register/remove themselves\n// from the items list\ntype Context = {\n  registerItem: (item: HTMLElement) => void\n  removeItem: (item: HTMLElement) => void\n  registerKnob: (item: HTMLElement) => void\n  removeKnob: (item: HTMLElement) => void\n}\n\nconst SortableListContext = React.createContext<Context | undefined>(undefined)\nconst SortableList = <TTag extends keyof JSX.IntrinsicElements = typeof DEFAULT_CONTAINER_TAG>({\n  children,\n  allowDrag = true,\n  onSortEnd,\n  draggedItemClassName,\n  as,\n  lockAxis,\n  customHolderRef,\n  ...rest\n}: Props<TTag>) => {\n  // this array contains the elements than can be sorted (wrapped inside SortableItem)\n  const itemsRef = React.useRef<HTMLElement[]>([])\n  // this array contains the coordinates of each sortable element (only computed on dragStart and used in dragMove for perf reason)\n  const itemsRect = React.useRef<DOMRect[]>([])\n  // Hold all registered knobs\n  const knobs = React.useRef<HTMLElement[]>([])\n  // contains the container element\n  const containerRef = React.useRef<HTMLElement | null>(null)\n  // contains the target element (copy of the source element)\n  const targetRef = React.useRef<HTMLElement | null>(null)\n  // contains the index in the itemsRef array of the element being dragged\n  const sourceIndexRef = React.useRef<number | undefined>(undefined)\n  // contains the index in the itemsRef of the element to be exchanged with the source item\n  const lastTargetIndexRef = React.useRef<number | undefined>(undefined)\n  // contains the offset point where the initial drag occurred to be used when dragging the item\n  const offsetPointRef = React.useRef<Point>({ x: 0, y: 0 })\n\n  React.useEffect(() => {\n    const holder = customHolderRef?.current || document.body\n    return () => {\n      // cleanup the target element from the DOM when SortableList in unmounted\n      if (targetRef.current) {\n        holder.removeChild(targetRef.current)\n      }\n    }\n  }, [customHolderRef])\n\n  const updateTargetPosition = (position: Point) => {\n    if (targetRef.current && sourceIndexRef.current !== undefined) {\n      const offset = offsetPointRef.current\n      const sourceRect = itemsRect.current[sourceIndexRef.current]\n      const newX = lockAxis === 'y' ? sourceRect.left : position.x - offset.x\n      const newY = lockAxis === 'x' ? sourceRect.top : position.y - offset.y\n\n      // we use `translate3d` to force using the GPU if available\n      targetRef.current.style.transform = `translate3d(${newX}px, ${newY}px, 0px)`\n    }\n  }\n\n  const copyItem = React.useCallback(\n    (sourceIndex: number) => {\n      if (!containerRef.current) {\n        return\n      }\n\n      const source = itemsRef.current[sourceIndex]\n      const sourceRect = itemsRect.current[sourceIndex]\n\n      const copy = source.cloneNode(true) as HTMLElement\n\n      // added the \"dragged\" class name\n      if (draggedItemClassName) {\n        draggedItemClassName.split(' ').forEach((c) => copy.classList.add(c))\n      }\n\n      // we ensure the copy has the same size than the source element\n      copy.style.width = `${sourceRect.width}px`\n      copy.style.height = `${sourceRect.height}px`\n      // we place the target starting position to the top left of the window\n      // it will then be moved relatively using `transform: translate3d()`\n      copy.style.position = 'fixed'\n      copy.style.margin = '0'\n      copy.style.top = '0'\n      copy.style.left = '0'\n\n      const sourceCanvases = source.querySelectorAll('canvas')\n      copy.querySelectorAll('canvas').forEach((canvas, index) => {\n        canvas.getContext('2d')?.drawImage(sourceCanvases[index], 0, 0)\n      })\n\n      const holder = customHolderRef?.current || document.body\n      holder.appendChild(copy)\n\n      targetRef.current = copy\n    },\n    [customHolderRef, draggedItemClassName]\n  )\n\n  const listeners = useDrag({\n    allowDrag,\n    containerRef,\n    knobs: knobs.current,\n    onStart: ({ pointInWindow }) => {\n      if (!containerRef.current) {\n        return\n      }\n\n      itemsRect.current = itemsRef.current.map((item) => item.getBoundingClientRect())\n\n      const sourceIndex = findItemIndexAtPosition(pointInWindow, itemsRect.current)\n      // if we are not starting the drag gesture on a SortableItem, we exit early\n      if (sourceIndex === -1) {\n        return\n      }\n\n      // saving the index of the item being dragged\n      sourceIndexRef.current = sourceIndex\n\n      // the item being dragged is copied to the document body and will be used as the target\n      copyItem(sourceIndex)\n\n      // hide source during the drag gesture\n      const source = itemsRef.current[sourceIndex]\n      source.style.opacity = '0'\n      source.style.visibility = 'hidden'\n\n      // get the offset between the source item's window position relative to the point in window\n      const sourceRect = source.getBoundingClientRect()\n      offsetPointRef.current = {\n        x: pointInWindow.x - sourceRect.left,\n        y: pointInWindow.y - sourceRect.top,\n      }\n\n      updateTargetPosition(pointInWindow)\n\n      // Adds a nice little physical feedback\n      if (window.navigator.vibrate) {\n        window.navigator.vibrate(100)\n      }\n    },\n    onMove: ({ pointInWindow }) => {\n      updateTargetPosition(pointInWindow)\n\n      const sourceIndex = sourceIndexRef.current\n      // if there is no source, we exit early (happened when drag gesture was started outside a SortableItem)\n      if (sourceIndex === undefined || sourceIndexRef.current === undefined) {\n        return\n      }\n\n      const sourceRect = itemsRect.current[sourceIndexRef.current]\n      const targetPoint: Point = {\n        x: lockAxis === 'y' ? sourceRect.left : pointInWindow.x,\n        y: lockAxis === 'x' ? sourceRect.top : pointInWindow.y,\n      }\n\n      const targetIndex = findItemIndexAtPosition(targetPoint, itemsRect.current, {\n        fallbackToClosest: true,\n      })\n      // if not target detected, we don't need to update other items' position\n      if (targetIndex === -1) {\n        return\n      }\n      // we keep track of the last target index (to be passed to the onSortEnd callback)\n      lastTargetIndexRef.current = targetIndex\n\n      const isMovingRight = sourceIndex < targetIndex\n\n      // in this loop, we go over each sortable item and see if we need to update their position\n      for (let index = 0; index < itemsRef.current.length; index += 1) {\n        const currentItem = itemsRef.current[index]\n        const currentItemRect = itemsRect.current[index]\n        // if current index is between sourceIndex and targetIndex, we need to translate them\n        if (\n          (isMovingRight && index >= sourceIndex && index <= targetIndex) ||\n          (!isMovingRight && index >= targetIndex && index <= sourceIndex)\n        ) {\n          // we need to move the item to the previous or next item position\n          const nextItemRects = itemsRect.current[isMovingRight ? index - 1 : index + 1]\n          if (nextItemRects) {\n            const translateX = nextItemRects.left - currentItemRect.left\n            const translateY = nextItemRects.top - currentItemRect.top\n            // we use `translate3d` to force using the GPU if available\n            currentItem.style.transform = `translate3d(${translateX}px, ${translateY}px, 0px)`\n          }\n        }\n        // otherwise, the item should be at its original position\n        else {\n          currentItem.style.transform = 'translate3d(0,0,0)'\n        }\n        // we want the translation to be animated\n        currentItem.style.transitionDuration = '300ms'\n      }\n    },\n    onEnd: () => {\n      // we reset all items translations (the parent is expected to sort the items in the onSortEnd callback)\n      for (let index = 0; index < itemsRef.current.length; index += 1) {\n        const currentItem = itemsRef.current[index]\n        currentItem.style.transform = ''\n        currentItem.style.transitionDuration = ''\n      }\n\n      const sourceIndex = sourceIndexRef.current\n      if (sourceIndex !== undefined) {\n        // show the source item again\n        const source = itemsRef.current[sourceIndex]\n        if (source) {\n          source.style.opacity = '1'\n          source.style.visibility = ''\n        }\n\n        const targetIndex = lastTargetIndexRef.current\n        if (targetIndex !== undefined) {\n          if (sourceIndex !== targetIndex) {\n            // sort our internal items array\n            itemsRef.current = arrayMove(itemsRef.current, sourceIndex, targetIndex)\n            // let the parent know\n            onSortEnd(sourceIndex, targetIndex)\n          }\n        }\n      }\n      sourceIndexRef.current = undefined\n      lastTargetIndexRef.current = undefined\n\n      // cleanup the target element from the DOM\n      if (targetRef.current) {\n        const holder = customHolderRef?.current || document.body\n        holder.removeChild(targetRef.current)\n        targetRef.current = null\n      }\n    },\n  })\n\n  const registerItem = React.useCallback((item: HTMLElement) => {\n    itemsRef.current.push(item)\n  }, [])\n\n  const removeItem = React.useCallback((item: HTMLElement) => {\n    const index = itemsRef.current.indexOf(item)\n    if (index !== -1) {\n      itemsRef.current.splice(index, 1)\n    }\n  }, [])\n\n  const registerKnob = React.useCallback((item: HTMLElement) => {\n    knobs.current.push(item)\n  }, [])\n\n  const removeKnob = React.useCallback((item: HTMLElement) => {\n    const index = knobs.current.indexOf(item)\n\n    if (index !== -1) {\n      knobs.current.splice(index, 1)\n    }\n  }, [])\n\n  // we need to memoize the context to avoid re-rendering every children of the context provider\n  // when not needed\n  const context = React.useMemo(() => ({ registerItem, removeItem, registerKnob, removeKnob }), [\n    registerItem,\n    removeItem,\n    registerKnob,\n    removeKnob,\n  ])\n\n  return React.createElement(\n    as || DEFAULT_CONTAINER_TAG,\n    {\n      ...(allowDrag ? listeners : {}),\n      ...rest,\n      ref: containerRef,\n    },\n    <SortableListContext.Provider value={context}>{children}</SortableListContext.Provider>\n  )\n}\n\nexport default SortableList\n\ntype ItemProps = {\n  children: React.ReactElement\n}\n\n/**\n * SortableItem only adds a ref to its children so that we can register it to the main Sortable\n */\nexport const SortableItem = ({ children }: ItemProps) => {\n  const context = React.useContext(SortableListContext)\n  if (!context) {\n    throw new Error('SortableItem must be a child of SortableList')\n  }\n  const { registerItem, removeItem } = context\n  const elementRef = React.useRef<HTMLElement | null>(null)\n\n  React.useEffect(() => {\n    const currentItem = elementRef.current\n    if (currentItem) {\n      registerItem(currentItem)\n    }\n\n    return () => {\n      if (currentItem) {\n        removeItem(currentItem)\n      }\n    }\n    // if the children changes, we want to re-register the DOM node\n  }, [registerItem, removeItem, children])\n\n  return React.cloneElement(children, { ref: elementRef })\n}\n\nexport const SortableKnob = ({ children }: ItemProps) => {\n  const context = React.useContext(SortableListContext)\n\n  if (!context) {\n    throw new Error('SortableKnob must be a child of SortableList')\n  }\n\n  const { registerKnob, removeKnob } = context\n\n  const elementRef = React.useRef<HTMLElement | null>(null)\n\n  React.useEffect(() => {\n    const currentItem = elementRef.current\n\n    if (currentItem) {\n      registerKnob(currentItem)\n    }\n\n    return () => {\n      if (currentItem) {\n        removeKnob(currentItem)\n      }\n    }\n    // if the children changes, we want to re-register the DOM node\n  }, [registerKnob, removeKnob, children])\n\n  return React.cloneElement(children, { ref: elementRef })\n}\n"],"names":["findItemIndexAtPosition","_a","itemsRect","_b","x","y","_c","fallbackToClosest","smallestDistance","smallestDistanceIndex","index","length","rect","left","right","top","bottom","itemCenterX","itemCenterY","distance","Math","sqrt","pow","getMousePoint","e","Number","clientX","clientY","getTouchPoint","touch","getPointInContainer","point","containerTopLeft","preventDefault","event","disableContextMenu","window","addEventListener","capture","passive","enableContextMenu","removeEventListener","useDrag","onStart","onMove","onEnd","allowDrag","containerRef","knobs","containerPositionRef","React","useRef","handleTouchStartTimerRef","undefined","handleClickStartTimerMoveRef","callbacksRef","useState","isTouchDevice","setTouchDevice","useEffect","current","cancelTouchStart","clearTimeout","saveContainerPosition","useCallback","bounds","getBoundingClientRect","onDrag","pointInWindow","onMouseMove","moveStart","onTouchMove","cancelable","touches","document","onMouseUp","onTouchEnd","onMouseDown","button","find","knob","contains","target","setTimeout","handleTouchStart","onTouchStart","detectTouchDevice","touchScrollListener","useLayoutEffect","container_1","DEFAULT_CONTAINER_TAG","SortableListContext","createContext","SortableList","children","onSortEnd","draggedItemClassName","as","lockAxis","customHolderRef","rest","itemsRef","targetRef","sourceIndexRef","lastTargetIndexRef","offsetPointRef","holder","body","removeChild","updateTargetPosition","position","offset","sourceRect","newX","newY","style","transform","copyItem","sourceIndex","source","copy","cloneNode","split","forEach","c","classList","add","width","height","margin","sourceCanvases","querySelectorAll","canvas","getContext","drawImage","appendChild","listeners","map","item","opacity","visibility","navigator","vibrate","targetPoint","targetIndex","isMovingRight","currentItem","currentItemRect","nextItemRects","translateX","translateY","transitionDuration","arrayMove","registerItem","push","removeItem","indexOf","splice","registerKnob","removeKnob","context","useMemo","createElement","ref","Provider","value","SortableItem","useContext","Error","elementRef","cloneElement","SortableKnob"],"mappings":"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"}